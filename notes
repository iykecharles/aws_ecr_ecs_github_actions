# Stage 1: Build
FROM golang:1.20.5-alpine3.18 AS builder

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .
RUN go build -o main .

# Stage 2: Runtime
FROM alpine:latest

WORKDIR /app

# Create a non-root user and group
RUN addgroup -g 1000 appgroup && adduser -u 1000 -G appgroup -s /bin/sh -D appuser

# Copy the binary and change ownership
COPY --from=builder /app/main /app/main
# Copy the templates directory into the container
COPY templates/ /app/templates/

RUN chown appuser:appgroup /app/main

# Switch to the non-root user
USER appuser

EXPOSE 8080

CMD ["/app/main"]


name: Build and Push Docker Image
on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        # Uses the default branch of a public repository
        uses: actions/checkout@4
                                                          #https://github.com/docker/build-push-action?tab=readme-ov-file#usage
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: golang-app:latest
                                                          #https://github.com/aws-actions/amazon-ecr-login/tree/main?tab=readme-ov-file#examples-of-usage
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: us-east-1

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      